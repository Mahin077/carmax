@model carmax.Models.product

@{
    ViewBag.Title = "Create";
}

<head>
    <link rel="stylesheet" href="~/Content/Create.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/664672c985.js" crossorigin="anonymous"></script>
</head>

<body>
    @using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class=" form-horizontal mt-5">
            <h2 class="text-center"><span style="color:darkblue">Add</span> <span style="color:chocolate"> a Car</span></h2>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="card  rounded-3">
                <div class="card-body mx-auto" style="width: 700px;">
                    <div class="row g-2">
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label " })
                                <div class="text-danger">
                                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label " })
                                <div class="">
                                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.max_power, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.max_power, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.max_power, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.seating_capacity, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.seating_capacity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.seating_capacity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.body_type, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.body_type, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.body_type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.fuel_type, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.fuel_type, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.fuel_type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.no_of_cylinder, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.no_of_cylinder, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.no_of_cylinder, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.engine_type, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.engine_type, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.engine_type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.engine_displacement, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.engine_displacement, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.engine_displacement, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    <input type="file" name="File" id="File" accept=".jpg,.jpeg,.png" />
                                    @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.brand, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.brand, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.brand, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.discount, htmlAttributes: new { @class = "control-label " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.discount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.discount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-6">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Add" class="btn btn-primary" />
                                </div>
                            </div>
                    </div>              
                </div>
            </div>
        </div>
    }

    <button type="button" class="btn btn-dark listBtn mt-2">
        @Html.ActionLink("Back to List", "Index")
    </button>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

</body>